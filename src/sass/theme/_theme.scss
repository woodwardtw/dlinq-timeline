// This is an empty scss file for your custom styles - Please add your super duper awesome mega design styles here

*,
*::before,
*::after {
  box-sizing: border-box;
}


h1, h2, h3, h4, h5, h6 {
	font-family: 'Abril Fatface', serif;
	font-weight: 700;
}

h1 {
	font-size: 5rem;
}

h2 {
	font-size: 4rem;
}

p {
	font-size: 1.3rem;
}

.entry-header {
	margin-top: 100px;
}

figure {
  padding: 10px;
  border: 1px solid $med-gray;
  background-color: #ffffff;
}

figure img {
	width: 100%;
	height: auto;
}

figcaption, .wp-caption-text {
  margin: 15px 0;
  font-size: .8rem;
  font-weight: 300;
  line-height: .9rem;
}

/*header menu*/

#main-nav {
	width: 100%;
	background-color: #ffffff;
	box-shadow: 0 1px $light-blue;
}

.menu-logo {
	height: auto;
	width: 70px;
	margin: 0 20px 0 80px;
}

.navbar-brand {
	font-family: 'Abril Fatface', serif;
	font-weight: 700;
	font-size: 1.3rem;
}

#main-menu a{
	color: $blue;	
	transition: all .4s ease;
}

#main-menu a:hover {
	background-color: $light-blue;
}

/*full page*/

.entry-title {
	text-align: center;
}

#full-width-page-wrapper {
	padding: 0;
}

/*flex content*/

.title-row {
	padding: 30px 100px;
}

.topic-row {
	padding: 100px 100px;
}

.topic-row.green{
	background-color: $dark-green;
}

.topic-row.black {
	background-color: #000;
}

.topic-row.yellow {
	background-color: $yellow;
}

.topic-row.gray {
	background-color: $gray;
}

.topic-row.blue {
	background-color: $blue;
}

.topic-row.light-blue {
	background-color: $light-blue;
}

.topic-row.dark p, .topic-row.dark h1, .topic-row.dark h2, .topic-row.dark h3, .topic-row.dark .memory,
.topic-row.green p, .topic-row.green h1, .topic-row.green h2, .topic-row.green h3, .topic-row.green .memory,
.topic-row.black p, .topic-row.black h1, .topic-row.black h2, .topic-row.black h3, .topic-row.black .memory,
.topic-row.blue p, .topic-row.blue h1, .topic-row.blue h2, .topic-row.blue h3, .topic-row.blue .memory   {
	color: #fff;
}

.memory {
	margin: 30px 0;
	padding: 30px;
	border: 1px solid #fff;
}

.memory-giver {
	font-family: abril-fatface, serif;
	font-size: 1.5rem;
}

.col-md-8:nth-of-type(even) .memory{
	margin-left: 60px;
}

.col-md-8:nth-of-type(odd) .memory{
	margin-right: 60px;
}

blockquote.big-quote {
	// background-color: rgba($blue,.2);
	box-shadow: 15px 15px $light-blue;
	border: 2px solid $light-blue;
}

blockquote.big-quote p{
	margin-left: 50px;
	padding: 0 40px;
	// border-left: 8px solid $blue;	
	font-size: 2rem;
	line-height: 1.2;
	font-style: italic;
}

blockquote.big-quote {
  font-size: 2.5rem;
  font-style: italic;
}

blockquote.big-quote:before {
  color: $blue;
  content: '\201C';
  font-size: 4em;
  line-height: 0.1em;
  margin-right: 0.25em;
  vertical-align: -0.3em;
  font-family: serif;
}

blockquote.big-quote footer {
	margin: 20px 0;
	text-decoration: none;
}

blockquote.big-quote footer p {
	border-left: none;
	font-size: 1.5rem;
	margin: 0 0 0 90px;
	padding: 0;
	font-weight: 100;
}


/*TIMELINE STUFF*/
.timeline {
  width: 90%;
  margin: 50px auto;
  height: 100%;
  overflow: hidden;
  background-image: url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' width='4' height='1'><rect fill='black' x='0' y='0' width='100%' height='100%'/></svg>");
  background-repeat: repeat-y;
  background-position: center;
  padding: 50px;
}

.timeline .block {
  min-height: 100px;
  margin: 60px 0;
  display: grid;
  grid-template-columns: 1fr 1fr;
  column-gap: 90px;
}

.timeline h2 {
  font-size: 1.5rem;
}

.timeline .block-content {
  position: relative;
  background: #fff;
  border: 3px solid #000;
}

.timeline .block-content.blue{
  background-color: rgba($blue,.09);
   color: $blue;
   border-color: $blue;
}
.timeline .block-content.blue::after,.timeline .block-content.blue::before {
  background-color: $blue;
}

.timeline .block-content.red{
  background-color: rgba($red,.09);
   color: $red;
   border-color: $red;
}
.timeline .block-content.red::after,.timeline .block-content.red::before {
  background-color: $red;
}
.timeline .block-content.green{
  background-color: rgba($green,.09);
   color: $green;
   border-color: $green;
}
.timeline .block-content.green::after,.timeline .block-content.green::before {
  background-color: $green;
}


.timeline .left {
  grid-column-start: 1;
  padding: 40px;
}

.timeline .right {
  background: #fff;
  grid-column-start: 2;
  grid-column-end: 2;
  padding: 40px;
}
.timeline .block-content::after {
  content: "";
  display: block;
  width: 46px;
  height: 4px;
  background-color: #000;
  position: absolute;
  right: -46px;
  top: 50%;
}

.timeline .block-content::before {
  content: "";
  display: block;
  width: 20px;
  height: 20px;
  background-color: #000;
  border-radius: 50%;
  position: absolute;
  right: -58px;
  top: calc(50% - 8px);
}

.timeline .block-content.right::after {
  left: -46px;
  right: none;
}

.timeline .block-content.right::before {
  left: -58px;
  right: none;
}



#wrapper-footer, #wrapper-footer-full {
	background-color: $blue;
	color: #ffffff;
	padding: 200px 5vw;
}


@media (max-width: 1400px) {
   .timeline {
    background-position: 10px;
   }
   .timeline .block {
    grid-template-columns: 1fr;
  }
  .timeline .left, .timeline .right {
    grid-column-start: 1;
    padding: 40px;
  }
  .timeline .block-content::after, .timeline .block-content.right::after {
    content: "";
    width: 38px;
    left: -38px;
    top: 50%;
  }

.timeline .block-content::before, .timeline .block-content.right::before {
    content: "";
    display: block;    
    left: -50px;
    top: calc(50% - 8px);
  }
}

@media (max-width: 767px) {
	h1 {
		font-size: 3.5rem;
	}

	h2 {
		font-size: 2.5rem;
	}

	blockquote.big-quote p{
		margin-left: 15px;
		padding: 0 10px;
	}
	blockquote.big-quote footer p {
		margin-left: 15px;
	}

	.title-row, .topic-row {
		padding: 50px 20px;
	}
	.menu-logo{
		margin: 0 20px 0 20px;
		display: none;
	}

}

//deal with wp admin bar and fixed top menu really well
//https://notlaura.com/a-quick-css-algorithm-for-handling-the-wp-admin-bar-with-a-fixed-menu/
:root {
  // 1. Set up the constant values
  // It's best practice to keep custom property values unit-less, lest you run into issues I don't understand well enough to explain here.
  --login-bar-height: 0;
  --menu-bar-height: 50;
}

// 2. Conditionally adjust the height of the login bar based on WordPress' values.
// if body has class "logged-in" and screen is > 783px, update the value.
.logged-in { // This class is added to <body> by WordPress
  @media ( min-width: 783px ) { // Breakpoint comes from WordPress
    --login-bar-height: 32;
  }
}

// 3. Bind the custom property values to regular properties.
// When the login bar isn't here, the value of the --login-bar-height 
// property will be 0 because of our conditional above. 
// So satisfying and clean and great!!!
// Is CSS a programming language? 
.navbar {
  // Fix the menu bar. This would also work for an absolutely positioned bar.
  width: 100%;
  position: fixed;
  
  // Use calc to apply a unit to the custom property value
  top: calc( var( --login-bar-height ) * 1px ); 
  height: calc( var( --menu-bar-height ) * 1px );
}

.main-content {
  // Pad the top of the content to account for both the menu and login bar height.
  padding-top: calc( ( var( --menu-bar-height ) + var( --login-bar-height ) ) * 1px );
}

//VIDEO 

.video-responsive{
    overflow:hidden;
    padding-bottom:56.25%;
    position:relative;
    height:0;
}
.video-responsive iframe{
    left:0;
    top:0;
    height:100%;
    width:100%;
    position:absolute;
}